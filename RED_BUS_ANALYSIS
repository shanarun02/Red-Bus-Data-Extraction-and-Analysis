import pandas as pd 
import seaborn as sns


red_busz_integrated= pd.read_csv(r"D:\GUVI_PROJECT\redbusdataharvesting\red_busz_integrated.csv")
red_busz_integrated.columns


for i in red_busz_integrated.columns:
    print(type(i))


# Count of each Bus Type
popular_bus_types = red_busz_integrated['Bus Type'].value_counts()
print(popular_bus_types)


# Average price grouped by Bus Type
avg_price_by_type = red_busz_integrated.groupby('Bus Type')['Price'].mean().sort_values(ascending=False)
print(avg_price_by_type)


# Top 10 cheapest buses
cheapest_buses = red_busz_integrated.sort_values(by='Price', ascending=True)
cheapest_buses[['Bus Name', 'Price', 'Route Name', 'Rating']].head(10)



plt.figure(figsize=(12,8))
popular_routes = red_busz_integrated['Route Name'].value_counts().head(10)
sns.barplot(x=popular_routes.values, y=popular_routes.index, palette='magma')
plt.title('Top 10 Most Frequent Routes')
plt.xlabel('Number of Buses')
plt.ylabel('Route Name')
plt.grid(True)
plt.show()

# Top 10 most frequent routes
popular_routes = red_busz_integrated['Route Name'].value_counts().head(10)
print(popular_routes)


# Extract Departure hour
red_busz_integrated['Departure Hour'] = pd.to_datetime(red_busz_integrated['Departure'], format='%H:%M', errors='coerce').dt.hour

# Plot Departure hours
red_busz_integrated['Departure Hour'].value_counts().sort_index().plot(kind='bar', figsize=(12,6))
plt.title('Number of Departures by Hour')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Buses')
plt.grid(True)
plt.show()


plt.figure(figsize=(10,6))
sns.histplot(data=red_busz_integrated, x='Price', bins=30, kde=True, color='coral')
plt.title('Price Distribution of Buses')
plt.xlabel('Price')
plt.ylabel('Number of Buses')
plt.grid(True)
plt.show()


plt.figure(figsize=(8,8))
bus_type_counts = red_busz_integrated['Bus Type'].value_counts()
plt.pie(bus_type_counts, labels=bus_type_counts.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette('pastel'))
plt.title('Bus Type Distribution')
plt.show()




# Extract Departure hour if not extracted
red_busz_integrated['Departure Hour'] = pd.to_datetime(red_busz_integrated['Departure'], format='%H:%M', errors='coerce').dt.hour

plt.figure(figsize=(12,6))
sns.countplot(x='Departure Hour', data=red_busz_integrated, palette='cubehelix')
plt.title('Busiest Departure Hours')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Buses')
plt.grid(True)
plt.show()


avg_price_route = red_busz_integrated.groupby('Route Name')['Price'].mean().sort_values(ascending=False).head(10)

plt.figure(figsize=(12,8))
sns.barplot(x=avg_price_route.values, y=avg_price_route.index, palette='plasma')
plt.title('Top 10 Most Expensive Routes (Average Price)')
plt.xlabel('Average Price')
plt.ylabel('Route Name')
plt.grid(True)
plt.show()

